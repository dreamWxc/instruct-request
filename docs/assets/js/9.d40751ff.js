(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{391:function(a,t,e){"use strict";e.r(t);var v=e(51),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"cache配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache配置"}},[a._v("#")]),a._v(" Cache配置")]),a._v(" "),e("h2",{attrs:{id:"基本配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本配置"}},[a._v("#")]),a._v(" 基本配置")]),a._v(" "),e("h3",{attrs:{id:"update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[a._v("#")]),a._v(" "),e("code",[a._v("update")])]),a._v(" "),e("p",[a._v("是否更新，如果更新将会 继续去执行请求，并进行读取缓存 如果指定 "),e("code",[a._v("where")]),a._v(" 则会优先执行 "),e("code",[a._v("where")])]),a._v(" "),e("h4",{attrs:{id:"参数-boolean-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-boolean-function"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Boolean")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("boolean")]),a._v(" 很好理解，就是是否更新，"),e("code",[a._v("false")]),a._v(" 将不会触发更新 "),e("code",[a._v("true")]),a._v(" 将会触发更新\n"),e("br"),a._v(" "),e("code",[a._v("Function")]),a._v(" 则为提供函数，当进行判断是否更新时将会执行此函数,分别传入 "),e("code",[a._v("执行上下文")]),a._v(" 和 "),e("code",[a._v("缓存结果")])]),a._v(" "),e("h3",{attrs:{id:"first"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#first"}},[a._v("#")]),a._v(" "),e("code",[a._v("first")])]),a._v(" "),e("p",[a._v("是否首次执行更新 所谓首次格式为 此缓存刚被首次读取 如果指定 "),e("code",[a._v("update")]),a._v(" 优先使用 "),e("code",[a._v("update")]),a._v("，经常被用于首次进入更新缓存的操作")]),a._v(" "),e("h4",{attrs:{id:"参数-boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-boolean"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Boolean")])]),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[a._v("#")]),a._v(" "),e("code",[a._v("storage")])]),a._v(" "),e("p",[a._v("存储类型 如果设置的 缓存类型不支持 默认 将自动转为 "),e("code",[a._v("memory")])]),a._v(" "),e("h4",{attrs:{id:"参数-memory-local-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-memory-local-session"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("memory")]),a._v(" | "),e("code",[a._v("local")]),a._v(" | "),e("code",[a._v("session")])]),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"where"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[a._v("#")]),a._v(" "),e("code",[a._v("where")])]),a._v(" "),e("p",[a._v("是否使用缓存 自定义 获取缓存前执行")]),a._v(" "),e("h4",{attrs:{id:"参数-boolean-function-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-boolean-function-2"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Boolean")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("boolean")]),a._v(" 很好理解，就是是否使用，"),e("code",[a._v("false")]),a._v(" 将不使用 "),e("code",[a._v("true")]),a._v(" 将会使用\n"),e("br"),a._v(" "),e("code",[a._v("Function")]),a._v(" 则为提供函数，当进行判断是否使用时将会执行此函数,传入 "),e("code",[a._v("执行上下文")]),a._v(" 进行判断")]),a._v(" "),e("h3",{attrs:{id:"haswhere"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#haswhere"}},[a._v("#")]),a._v(" "),e("code",[a._v("hasWhere")])]),a._v(" "),e("p",[a._v("是否使用缓存 自定义 获取完成缓存后执行,同 "),e("code",[a._v("where")]),a._v(" 一个效果，仅是执行时机不同，并且为"),e("code",[a._v("Function")]),a._v(" 时 将多一个"),e("code",[a._v("缓存结果")]),a._v("参数")]),a._v(" "),e("h3",{attrs:{id:"handle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handle"}},[a._v("#")]),a._v(" "),e("code",[a._v("handle")])]),a._v(" "),e("p",[a._v("获取到缓存后的处理 返回值将作为新的数据返回出去")]),a._v(" "),e("h4",{attrs:{id:"参数-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-function"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("Function")]),a._v("  提供函数处理获得到的缓存，并将结果返回")]),a._v(" "),e("h3",{attrs:{id:"expire"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expire"}},[a._v("#")]),a._v(" "),e("code",[a._v("expire")])]),a._v(" "),e("p",[a._v("过期时间 单位为"),e("code",[a._v("ms")]),a._v(" 小于 0 或者不传入 会被认为按照 "),e("code",[a._v("模式")]),a._v(" 的 "),e("code",[a._v("生命周期")])]),a._v(" "),e("h4",{attrs:{id:"参数-number-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-number-function"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Number")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("number")]),a._v(" 则为距离当下多久过期 比如 "),e("code",[a._v("10 * 1000")]),a._v(" 则为 "),e("code",[a._v("10s")]),a._v(" "),e("code",[a._v("Function")]),a._v(" 通过函数获取 传入参数分别为 "),e("code",[a._v("将要存储data")]),a._v(" 和 "),e("code",[a._v("被替换存储data")]),a._v(" 和 "),e("code",[a._v("sign唯一令牌")])]),a._v(" "),e("h3",{attrs:{id:"groupid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#groupid"}},[a._v("#")]),a._v(" "),e("code",[a._v("groupId")])]),a._v(" "),e("p",[e("code",[a._v("组id")]),a._v(" 可以通过 "),e("code",[a._v("组id")]),a._v(" 进行删除多个缓存,可以应用在多个请求，或者同一个请求，有多种不同的参数上")]),a._v(" "),e("h4",{attrs:{id:"参数-string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-string"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("String")])]),a._v(" "),e("br"),a._v(" "),e("h3",{attrs:{id:"id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[a._v("#")]),a._v(" "),e("code",[a._v("id")])]),a._v(" "),e("p",[e("code",[a._v("唯一id")]),a._v(" 和 "),e("code",[a._v("组id")]),a._v("不一样，此"),e("code",[a._v("id")]),a._v("仅会存储一个 如果"),e("code",[a._v("id")]),a._v("相同会相互替换,且同一个请求多种不同的参数也被认为属于多个 如果需要存储多个建议使用 "),e("code",[a._v("groupId")])]),a._v(" "),e("h4",{attrs:{id:"参数-string-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-string-2"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("String")])]),a._v(" "),e("br"),a._v(" "),e("h2",{attrs:{id:"cache类配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache类配置"}},[a._v("#")]),a._v(" Cache类配置")]),a._v(" "),e("h3",{attrs:{id:"getdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getdata"}},[a._v("#")]),a._v(" "),e("code",[a._v("getData")])]),a._v(" "),e("p",[a._v("获取某个平台缓存 如果为"),e("code",[a._v("string")]),a._v(" 则为 "),e("code",[a._v("sign")])]),a._v(" "),e("h3",{attrs:{id:"getdataall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getdataall"}},[a._v("#")]),a._v(" "),e("code",[a._v("getDataAll")])]),a._v(" "),e("p",[a._v("获取所有平台此缓存 如果为"),e("code",[a._v("string")]),a._v(" 则为 "),e("code",[a._v("sign")])]),a._v(" "),e("h3",{attrs:{id:"getgroupdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getgroupdata"}},[a._v("#")]),a._v(" "),e("code",[a._v("getGroupData")])]),a._v(" "),e("p",[a._v("获取某平台组的缓存 如果为"),e("code",[a._v("string")]),a._v(" 则为 "),e("code",[a._v("sign")])]),a._v(" "),e("h3",{attrs:{id:"getgroupdataall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getgroupdataall"}},[a._v("#")]),a._v(" "),e("code",[a._v("getGroupDataAll")])]),a._v(" "),e("p",[a._v("获取所有平台 组的缓存 如果为"),e("code",[a._v("string")]),a._v(" 则为 "),e("code",[a._v("sign")])]),a._v(" "),e("h3",{attrs:{id:"update-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-2"}},[a._v("#")]),a._v(" "),e("code",[a._v("update")])]),a._v(" "),e("p",[a._v("更新缓存")]),a._v(" "),e("h3",{attrs:{id:"updategroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updategroup"}},[a._v("#")]),a._v(" "),e("code",[a._v("updateGroup")])]),a._v(" "),e("p",[a._v("更新组缓存")]),a._v(" "),e("h3",{attrs:{id:"updateall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updateall"}},[a._v("#")]),a._v(" "),e("code",[a._v("updateAll")])]),a._v(" "),e("p",[a._v("更新平台缓存")]),a._v(" "),e("h3",{attrs:{id:"updateallgroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#updateallgroup"}},[a._v("#")]),a._v(" "),e("code",[a._v("updateAllGroup")])]),a._v(" "),e("p",[a._v("更新全平台缓存组")]),a._v(" "),e("h3",{attrs:{id:"delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[a._v("#")]),a._v(" "),e("code",[a._v("delete")])]),a._v(" "),e("p",[a._v("删除缓存")]),a._v(" "),e("h3",{attrs:{id:"deletegroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deletegroup"}},[a._v("#")]),a._v(" "),e("code",[a._v("deleteGroup")])]),a._v(" "),e("p",[a._v("删除组缓存")]),a._v(" "),e("h3",{attrs:{id:"deleteall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deleteall"}},[a._v("#")]),a._v(" "),e("code",[a._v("deleteAll")])]),a._v(" "),e("p",[a._v("删除全平台缓存")]),a._v(" "),e("h3",{attrs:{id:"deleteallgroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deleteallgroup"}},[a._v("#")]),a._v(" "),e("code",[a._v("deleteAllGroup")])]),a._v(" "),e("p",[a._v("删除全平台缓存组")]),a._v(" "),e("h3",{attrs:{id:"clear"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[a._v("#")]),a._v(" "),e("code",[a._v("clear")])]),a._v(" "),e("p",[a._v("清楚某平台缓存")]),a._v(" "),e("h3",{attrs:{id:"clearall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clearall"}},[a._v("#")]),a._v(" "),e("code",[a._v("clearAll")])]),a._v(" "),e("p",[a._v("清楚所有平台缓存")]),a._v(" "),e("h3",{attrs:{id:"rollback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rollback"}},[a._v("#")]),a._v(" "),e("code",[a._v("rollBack")])]),a._v(" "),e("p",[a._v("回滚 如果参数发生变化，可以通过此函数回滚到，上一次发生变化的时候，仅作为链式结尾有效")]),a._v(" "),e("h3",{attrs:{id:"data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[a._v("#")]),a._v(" "),e("code",[a._v("data")])]),a._v(" "),e("p",[a._v("更新的data数据")]),a._v(" "),e("h4",{attrs:{id:"参数-any-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-any-function"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("any")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("any")]),a._v(" 则为直接被更新的数据\n"),e("br"),a._v(" "),e("code",[a._v("Function")]),a._v(" 通过函数获取 传入参数分别为 "),e("code",[a._v("当前配置")]),a._v(" 和 "),e("code",[a._v("全局配置")])]),a._v(" "),e("h3",{attrs:{id:"datatrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datatrigger"}},[a._v("#")]),a._v(" "),e("code",[a._v("dataTrigger")])]),a._v(" "),e("p",[a._v("如果不存在 "),e("code",[a._v("data")]),a._v(" 则使用 此字段获取 差别主要是"),e("code",[a._v("执行函数")]),a._v("参数差别")]),a._v(" "),e("h4",{attrs:{id:"参数-function-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-function-2"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("Function")]),a._v(" 通过函数获取 传入参数为 "),e("code",[a._v("当前的基础配置")])]),a._v(" "),e("h3",{attrs:{id:"option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#option"}},[a._v("#")]),a._v(" "),e("code",[a._v("option")])]),a._v(" "),e("p",[a._v("缓存的配置 一般从此处获取到更新 "),e("code",[a._v("平台")]),a._v(" 同底部"),e("code",[a._v("配置")]),a._v("一致")]),a._v(" "),e("h4",{attrs:{id:"参数-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-object"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Object")])]),a._v(" "),e("p",[e("code",[a._v("Object")]),a._v(" 参考 "),e("code",[a._v("cache")]),a._v(" 配置")]),a._v(" "),e("h3",{attrs:{id:"skip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skip"}},[a._v("#")]),a._v(" "),e("code",[a._v("skip")])]),a._v(" "),e("p",[a._v("如果不存在指定平台 默认 更新全部平台")]),a._v(" "),e("h4",{attrs:{id:"参数-boolean-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-boolean-2"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Boolean")])]),a._v(" "),e("p",[e("code",[a._v("boolean")]),a._v(" 是否更新全平台")]),a._v(" "),e("h3",{attrs:{id:"groupid-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#groupid-2"}},[a._v("#")]),a._v(" "),e("code",[a._v("groupId")])]),a._v(" "),e("p",[a._v("组id")]),a._v(" "),e("h4",{attrs:{id:"参数-string-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-string-3"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("String")])]),a._v(" "),e("p",[e("code",[a._v("string")]),a._v(" 组id")]),a._v(" "),e("h3",{attrs:{id:"id-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id-2"}},[a._v("#")]),a._v(" "),e("code",[a._v("id")])]),a._v(" "),e("p",[a._v("唯一id")]),a._v(" "),e("h4",{attrs:{id:"参数-string-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-string-4"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("String")])]),a._v(" "),e("p",[e("code",[a._v("string")]),a._v(" 唯一id")]),a._v(" "),e("h3",{attrs:{id:"sign"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sign"}},[a._v("#")]),a._v(" "),e("code",[a._v("sign")])]),a._v(" "),e("p",[a._v("令牌")]),a._v(" "),e("h4",{attrs:{id:"参数-string-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-string-5"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("String")])]),a._v(" "),e("p",[e("code",[a._v("string")]),a._v(" 令牌")]),a._v(" "),e("h3",{attrs:{id:"replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[a._v("#")]),a._v(" "),e("code",[a._v("replace")])]),a._v(" "),e("p",[a._v("是否替换配置,此配置优先于回滚")]),a._v(" "),e("h4",{attrs:{id:"参数-boolean-function-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-boolean-function-3"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Boolean")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("Boolean")]),a._v(" 是否替换配置\n"),e("code",[a._v("Function")]),a._v(" 参数分别为 "),e("code",[a._v("替换的key")]),a._v(" 和 "),e("code",[a._v("新值")]),a._v(" 和 "),e("code",[a._v("旧值")])]),a._v(" "),e("h3",{attrs:{id:"where-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where-2"}},[a._v("#")]),a._v(" "),e("code",[a._v("where")])]),a._v(" "),e("p",[a._v("更新全平台的逻辑限制，比如可以通过指定 "),e("code",[a._v("['local','session']")]),a._v(" 更新某些平台")]),a._v(" "),e("h4",{attrs:{id:"参数-array-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-array-function"}},[a._v("#")]),a._v(" 参数: "),e("code",[a._v("Array")]),a._v(" | "),e("code",[a._v("Function")])]),a._v(" "),e("p",[e("code",[a._v("Array")]),a._v(" 更新的平台列表\n"),e("code",[a._v("Function")]),a._v(" 是否更新此平台，作为 参数为 "),e("code",[a._v("平台类型")]),a._v(" 返回 "),e("code",[a._v("Boolean")])])])}),[],!1,null,null,null);t.default=_.exports}}]);